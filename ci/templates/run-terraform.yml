parameters:
  terraformAction: plan
  terraformVersion: ""
  projectGroup: ""
  endpointName: ""
  subscriptionId: ""
  orgUrl: ""
  personalAccessToken: ""
  terraformLocation: ""

jobs:
  - deployment: ${{ parameters.projectGroup }}
    displayName: ${{ parameters.projectGroup }}
    environment: ${{ parameters.environmentName }}-${{ parameters.terraformAction }}
    workspace:
      clean: all
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self

            - pwsh: |
                $url = "https://releases.hashicorp.com/terraform/${{ parameters.terraformVersion }}/terraform_${{ parameters.terraformVersion }}_windows_amd64.zip"
                $zipFile = "terraform.zip"
                Invoke-WebRequest -Uri $url -OutFile $zipFile
                Expand-Archive -Path $zipFile -DestinationPath $env:USERPROFILE\.terraform.d\cli\$(terraformVersion)
                $env:Path += ";$env:USERPROFILE\.terraform.d\cli\${{ parameters.terraformVersion }}"
                terraform --version
              displayName: Install Terraform

            - task: AzureCLI@2
              displayName: Terraform ${{ parameters.terraformAction }}
              inputs:
                azureSubscription: ${{ parameters.endpointName }}
                workingDirectory: ${{ parameters.terraformLocation }}
                scriptType: pscore
                addSpnToEnvironment: true
                scriptLocation: inlineScript
                inlineScript: |
                  $env:ARM_USE_CLI = "false"
                  $env:ARM_CLIENT_ID = $env:servicePrincipalId
                  $env:ARM_CLIENT_SECRET = $env:servicePrincipalKey
                  $env:ARM_TENANT_ID = $env:tenantId
                  $env:ARM_SUBSCRIPTION_ID = $env:subscriptionId

                  $env:Path += ";$env:USERPROFILE\.terraform.d\cli\${{ parameters.terraformVersion }}"

                  terraform init -backend-config="subscription_id=${{ parameters.subscriptionId }}" -backend-config="key=azdev-serviceendpoint-terraform/${{ parameters.projectGroup }}.terraform.tfstate"
                  terraform ${{ parameters.terraformAction }}
              env:
                AZDO_ORG_SERVICE_URL: ${{ parameters.orgUrl }}
                AZDO_PERSONAL_ACCESS_TOKEN: ${{ parameters.personalAccessToken }}
